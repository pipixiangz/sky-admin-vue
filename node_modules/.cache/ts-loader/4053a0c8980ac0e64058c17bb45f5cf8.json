{"remainingRequest":"/Users/ppx/Desktop/projects/project-sky-admin-vue-ts/node_modules/babel-loader/lib/index.js!/Users/ppx/Desktop/projects/project-sky-admin-vue-ts/node_modules/ts-loader/index.js??ref--14-2!/Users/ppx/Desktop/projects/project-sky-admin-vue-ts/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/ppx/Desktop/projects/project-sky-admin-vue-ts/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/ppx/Desktop/projects/project-sky-admin-vue-ts/src/views/setmeal/index.vue?vue&type=script&lang=ts&","dependencies":[{"path":"/Users/ppx/Desktop/projects/project-sky-admin-vue-ts/src/views/setmeal/index.vue","mtime":1711703177423},{"path":"/Users/ppx/Desktop/projects/project-sky-admin-vue-ts/node_modules/cache-loader/dist/cjs.js","mtime":1711461565598},{"path":"/Users/ppx/Desktop/projects/project-sky-admin-vue-ts/node_modules/babel-loader/lib/index.js","mtime":1711461565694},{"path":"/Users/ppx/Desktop/projects/project-sky-admin-vue-ts/node_modules/ts-loader/index.js","mtime":1711461565472},{"path":"/Users/ppx/Desktop/projects/project-sky-admin-vue-ts/node_modules/cache-loader/dist/cjs.js","mtime":1711461565598},{"path":"/Users/ppx/Desktop/projects/project-sky-admin-vue-ts/node_modules/vue-loader/lib/index.js","mtime":1711461565788}],"contextDependencies":[],"result":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nrequire(\"core-js/modules/web.dom.iterable\");\n\nrequire(\"core-js/modules/es6.function.name\");\n\nvar _category = require(\"@/api/category\");\n\nvar _setMeal = require(\"@/api/setMeal\");\n\nvar _default = {\n  //模型数据\n  data: function data() {\n    return {\n      name: '',\n      page: 1,\n      pageSize: 10,\n      total: 0,\n      records: [],\n      options: [],\n      categoryId: '',\n      statusArr: [{\n        value: '0',\n        label: '停售'\n      }, {\n        value: '1',\n        label: '启售'\n      }],\n      status: '',\n      multipleSelection: '' //当前表格选中的多个元素\n\n    };\n  },\n  created: function created() {\n    var _this = this;\n\n    (0, _category.getCategoryByType)({\n      type: 2\n    }).then(function (res) {\n      if (res.data.code === 1) {\n        _this.options = res.data.data;\n      }\n    }); //页面加载完成后查询套分页数据\n\n    this.pageQuery();\n  },\n  methods: {\n    //分页查询\n    pageQuery: function pageQuery() {\n      var _this2 = this;\n\n      //封装分页查询参数\n      var params = {\n        page: this.page,\n        pageSize: this.pageSize,\n        name: this.name,\n        status: this.status,\n        categoryId: this.categoryId\n      };\n      (0, _setMeal.getSetmealPage)(params).then(function (res) {\n        if (res.data.code === 1) {\n          _this2.total = res.data.data.total;\n          _this2.records = res.data.data.records;\n        }\n      });\n    },\n    handleSizeChange: function handleSizeChange(pageSize) {\n      this.pageSize = pageSize;\n      this.pageQuery();\n    },\n    handleCurrentChange: function handleCurrentChange(page) {\n      this.page = page;\n      this.pageQuery();\n    },\n    //套餐启售停售操作\n    handleStartOrStop: function handleStartOrStop(row) {\n      var _this3 = this;\n\n      var p = {\n        id: row.id,\n        status: !row.status ? 1 : 0\n      };\n      this.$confirm('确认调整当前套餐的售卖状态, 是否继续?', '提示', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(function () {\n        (0, _setMeal.enableOrDisableSetmeal)(p).then(function (res) {\n          if (res.data.code === 1) {\n            _this3.$message.success('套餐售卖状态修改成功！');\n\n            _this3.pageQuery();\n          }\n        });\n      });\n    },\n    //删除套餐\n    handleDelete: function handleDelete(type, id) {\n      var _this4 = this;\n\n      this.$confirm('确认删除当前指定的套餐, 是否继续?', '提示', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(function () {\n        var param = '';\n\n        if (type == 'B') {\n          //批量删除\n          var arr = new Array();\n\n          _this4.multipleSelection.forEach(function (element) {\n            arr.push(element.id);\n          });\n\n          param = arr.join(',');\n        } else {\n          //单一删除\n          param = id;\n        }\n\n        (0, _setMeal.deleteSetmeal)(param).then(function (res) {\n          if (res.data.code === 1) {\n            _this4.$message.success('删除成功！');\n\n            _this4.pageQuery();\n          } else {\n            _this4.$message.error(res.data.msg);\n          }\n        });\n      });\n    },\n    handleSelectionChange: function handleSelectionChange(val) {\n      this.multipleSelection = val; // console.log('当前表格勾选了几项：' + val.length)\n      // val.forEach(element => {\n      //   console.log('id=' + element.id)\n      // })\n    }\n  }\n};\nexports.default = _default;",{"version":3,"sources":["/Users/ppx/Desktop/projects/project-sky-admin-vue-ts/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/ppx/Desktop/projects/project-sky-admin-vue-ts/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/ppx/Desktop/projects/project-sky-admin-vue-ts/src/views/setmeal/index.vue?vue&type=script&lang=ts&"],"names":[],"mappings":";;;;;;;;;;;AA+EA;;AACA;;eAEe;AACb;AACA,EAAA,IAFa,kBAET;AACF,WAAO;AACL,MAAA,IAAI,EAAE,EADD;AAEL,MAAA,IAAI,EAAE,CAFD;AAGL,MAAA,QAAQ,EAAE,EAHL;AAIL,MAAA,KAAK,EAAE,CAJF;AAKL,MAAA,OAAO,EAAE,EALJ;AAML,MAAA,OAAO,EAAE,EANJ;AAOL,MAAA,UAAU,EAAE,EAPP;AAQL,MAAA,SAAS,EAAC,CACR;AACE,QAAA,KAAK,EAAE,GADT;AAEE,QAAA,KAAK,EAAE;AAFT,OADQ,EAKR;AACE,QAAA,KAAK,EAAE,GADT;AAEE,QAAA,KAAK,EAAE;AAFT,OALQ,CARL;AAkBL,MAAA,MAAM,EAAE,EAlBH;AAmBL,MAAA,iBAAiB,EAAE,EAnBd,CAmBgB;;AAnBhB,KAAP;AAqBD,GAxBY;AAyBb,EAAA,OAzBa,qBAyBN;AAAA;;AACL,qCAAkB;AAAC,MAAA,IAAI,EAAE;AAAP,KAAlB,EAA6B,IAA7B,CAAkC,UAAA,GAAG,EAAG;AACtC,UAAG,GAAG,CAAC,IAAJ,CAAS,IAAT,KAAkB,CAArB,EAAwB;AACtB,QAAA,KAAI,CAAC,OAAL,GAAe,GAAG,CAAC,IAAJ,CAAS,IAAxB;AACD;AACF,KAJD,EADK,CAOL;;AACA,SAAK,SAAL;AACD,GAlCY;AAmCb,EAAA,OAAO,EAAE;AACP;AACA,IAAA,SAFO,uBAEE;AAAA;;AACP;AACA,UAAM,MAAM,GAAG;AACb,QAAA,IAAI,EAAE,KAAK,IADE;AAEb,QAAA,QAAQ,EAAE,KAAK,QAFF;AAGb,QAAA,IAAI,EAAE,KAAK,IAHE;AAIb,QAAA,MAAM,EAAE,KAAK,MAJA;AAKb,QAAA,UAAU,EAAE,KAAK;AALJ,OAAf;AAQA,mCAAe,MAAf,EAAuB,IAAvB,CAA4B,UAAA,GAAG,EAAG;AAChC,YAAG,GAAG,CAAC,IAAJ,CAAS,IAAT,KAAkB,CAArB,EAAuB;AACrB,UAAA,MAAI,CAAC,KAAL,GAAa,GAAG,CAAC,IAAJ,CAAS,IAAT,CAAc,KAA3B;AACA,UAAA,MAAI,CAAC,OAAL,GAAe,GAAG,CAAC,IAAJ,CAAS,IAAT,CAAc,OAA7B;AACD;AACF,OALD;AAMD,KAlBM;AAmBP,IAAA,gBAnBO,4BAmBU,QAnBV,EAmBkB;AACvB,WAAK,QAAL,GAAgB,QAAhB;AACA,WAAK,SAAL;AACD,KAtBM;AAuBP,IAAA,mBAvBO,+BAuBa,IAvBb,EAuBiB;AACtB,WAAK,IAAL,GAAY,IAAZ;AACA,WAAK,SAAL;AACD,KA1BM;AA2BP;AACA,IAAA,iBA5BO,6BA4BW,GA5BX,EA4Bc;AAAA;;AACnB,UAAM,CAAC,GAAG;AACR,QAAA,EAAE,EAAE,GAAG,CAAC,EADA;AAER,QAAA,MAAM,EAAE,CAAC,GAAG,CAAC,MAAL,GAAc,CAAd,GAAiB;AAFjB,OAAV;AAKA,WAAK,QAAL,CAAc,sBAAd,EAAsC,IAAtC,EAA4C;AACxC,QAAA,iBAAiB,EAAE,IADqB;AAExC,QAAA,gBAAgB,EAAE,IAFsB;AAGxC,QAAA,IAAI,EAAE;AAHkC,OAA5C,EAIK,IAJL,CAIU,YAAK;AACX,6CAAuB,CAAvB,EAA0B,IAA1B,CAA+B,UAAA,GAAG,EAAG;AACnC,cAAG,GAAG,CAAC,IAAJ,CAAS,IAAT,KAAkB,CAArB,EAAwB;AACtB,YAAA,MAAI,CAAC,QAAL,CAAc,OAAd,CAAsB,aAAtB;;AACA,YAAA,MAAI,CAAC,SAAL;AACD;AACF,SALD;AAMD,OAXH;AAYD,KA9CM;AA+CP;AACA,IAAA,YAhDO,wBAgDM,IAhDN,EAgDmB,EAhDnB,EAgD6B;AAAA;;AAClC,WAAK,QAAL,CAAc,oBAAd,EAAoC,IAApC,EAA0C;AACtC,QAAA,iBAAiB,EAAE,IADmB;AAEtC,QAAA,gBAAgB,EAAE,IAFoB;AAGtC,QAAA,IAAI,EAAE;AAHgC,OAA1C,EAIK,IAJL,CAIU,YAAK;AACX,YAAI,KAAK,GAAG,EAAZ;;AACA,YAAG,IAAI,IAAI,GAAX,EAAe;AAAC;AACd,cAAM,GAAG,GAAG,IAAI,KAAJ,EAAZ;;AACA,UAAA,MAAI,CAAC,iBAAL,CAAuB,OAAvB,CAA+B,UAAA,OAAO,EAAG;AACvC,YAAA,GAAG,CAAC,IAAJ,CAAS,OAAO,CAAC,EAAjB;AACD,WAFD;;AAGA,UAAA,KAAK,GAAG,GAAG,CAAC,IAAJ,CAAS,GAAT,CAAR;AACD,SAND,MAMK;AAAC;AACJ,UAAA,KAAK,GAAG,EAAR;AACD;;AAED,oCAAc,KAAd,EAAqB,IAArB,CAA0B,UAAA,GAAG,EAAG;AAC9B,cAAG,GAAG,CAAC,IAAJ,CAAS,IAAT,KAAkB,CAArB,EAAuB;AACrB,YAAA,MAAI,CAAC,QAAL,CAAc,OAAd,CAAsB,OAAtB;;AACA,YAAA,MAAI,CAAC,SAAL;AACD,WAHD,MAGK;AACH,YAAA,MAAI,CAAC,QAAL,CAAc,KAAd,CAAoB,GAAG,CAAC,IAAJ,CAAS,GAA7B;AACD;AACF,SAPD;AAQD,OAxBH;AAyBD,KA1EM;AA2EP,IAAA,qBA3EO,iCA2Ee,GA3Ef,EA2EkB;AACvB,WAAK,iBAAL,GAAyB,GAAzB,CADuB,CAEvB;AACA;AACA;AACA;AACD;AAjFM;AAnCI,C","sourcesContent":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\r\nimport {getCategoryByType} from '@/api/category'\r\nimport {getSetmealPage, enableOrDisableSetmeal,deleteSetmeal} from '@/api/setMeal'\r\n\r\nexport default {\r\n  //模型数据\r\n  data() {\r\n    return {\r\n      name: '', //套餐名称，对应上面的输入框\r\n      page: 1, //页码\r\n      pageSize: 10, //每页记录数\r\n      total: 0, //总记录数\r\n      records: [], //当前页要展示的数据集合\r\n      options: [],\r\n      categoryId: '', //分类id\r\n      statusArr:[\r\n        {\r\n          value: '0',\r\n          label: '停售'\r\n        },\r\n        {\r\n          value: '1',\r\n          label: '启售'\r\n        }\r\n      ],\r\n      status: '', //售卖状态,\r\n      multipleSelection: ''//当前表格选中的多个元素\r\n    }\r\n  },\r\n  created() {\r\n    getCategoryByType({type: 2}).then(res => {\r\n      if(res.data.code === 1) {\r\n        this.options = res.data.data\r\n      }\r\n    })\r\n\r\n    //页面加载完成后查询套分页数据\r\n    this.pageQuery()\r\n  },\r\n  methods: {\r\n    //分页查询\r\n    pageQuery() {\r\n      //封装分页查询参数\r\n      const params = {\r\n        page: this.page,\r\n        pageSize: this.pageSize,\r\n        name: this.name,\r\n        status: this.status,\r\n        categoryId: this.categoryId\r\n      }\r\n\r\n      getSetmealPage(params).then(res => {\r\n        if(res.data.code === 1){\r\n          this.total = res.data.data.total\r\n          this.records = res.data.data.records\r\n        }\r\n      })\r\n    },\r\n    handleSizeChange(pageSize) {\r\n      this.pageSize = pageSize\r\n      this.pageQuery()\r\n    },\r\n    handleCurrentChange(page) {\r\n      this.page = page\r\n      this.pageQuery()\r\n    },\r\n    //套餐启售停售操作\r\n    handleStartOrStop(row) {\r\n      const p = {\r\n        id: row.id,\r\n        status: !row.status ? 1: 0\r\n      }\r\n\r\n      this.$confirm('确认调整当前套餐的售卖状态, 是否继续?', '提示', {\r\n          confirmButtonText: '确定',\r\n          cancelButtonText: '取消',\r\n          type: 'warning'\r\n        }).then(() => {\r\n          enableOrDisableSetmeal(p).then(res => {\r\n            if(res.data.code === 1) {\r\n              this.$message.success('套餐售卖状态修改成功！')\r\n              this.pageQuery()\r\n            }\r\n          })\r\n        })\r\n    },\r\n    //删除套餐\r\n    handleDelete(type: string,id: string) {\r\n      this.$confirm('确认删除当前指定的套餐, 是否继续?', '提示', {\r\n          confirmButtonText: '确定',\r\n          cancelButtonText: '取消',\r\n          type: 'warning'\r\n        }).then(() => {\r\n          let param = ''\r\n          if(type == 'B'){//批量删除\r\n            const arr = new Array\r\n            this.multipleSelection.forEach(element => {//1,2,3\r\n              arr.push(element.id)\r\n            })\r\n            param = arr.join(',')\r\n          }else{//单一删除\r\n            param = id\r\n          }\r\n\r\n          deleteSetmeal(param).then(res => {\r\n            if(res.data.code === 1){\r\n              this.$message.success('删除成功！')\r\n              this.pageQuery()\r\n            }else{\r\n              this.$message.error(res.data.msg)\r\n            }\r\n          })\r\n        })\r\n    },\r\n    handleSelectionChange(val) {\r\n      this.multipleSelection = val\r\n      // console.log('当前表格勾选了几项：' + val.length)\r\n      // val.forEach(element => {\r\n      //   console.log('id=' + element.id)\r\n      // })\r\n    }\r\n  }\r\n}\r\n"],"sourceRoot":""}]}